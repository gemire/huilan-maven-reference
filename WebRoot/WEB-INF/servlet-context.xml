<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:util="http://www.springframework.org/schema/util"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:p="http://www.springframework.org/schema/p"
 xsi:schemaLocation="http://www.springframework.org/schema/mvc 
 http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
<!--  定义国际化消息-->
<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">         
<property name="basename">
<value>messages</value>
</property>
</bean>
<bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"></bean>

<bean  class="org.springframework.ui.context.support.ResourceBundleThemeSource"  id="themeSource"> 
    <property name="basenamePrefix" value="theme."></property>  
</bean>
 <bean id="themeResolver"  class="org.springframework.web.servlet.theme.CookieThemeResolver">  
    <property name="defaultThemeName" value="green" />
    <property name="cookieMaxAge" value="1200"/>
    <property name="cookiePath" value="/outletss/Manager/"/>
</bean> 
<!-- 自动扫描且只扫描@Controller -->
<context:component-scan base-package="com.hedgehog.outletss.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
   <!--<start id="multipart_resolver"/>-->   
   <bean id="multipartResolver" class=
	   "org.springframework.web.multipart.commons.CommonsMultipartResolver"
     p:maxUploadSize="500000" />
   <!--<end id="multipart_resolver"/>-->	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven />-->
	<mvc:annotation-driven/>
	<mvc:resources mapping="/**" location="/resources/" />
	<!-- <mvc:default-servlet-handler/> -->
	<mvc:interceptors> 
     <mvc:interceptor>
        <mvc:mapping path="/**" /> 
        <bean class="com.hedgehog.outletss.controller.AclInterceptor" /> 
     </mvc:interceptor>     
    </mvc:interceptors>
    <!-- <mvc:interceptor>
        <mvc:mapping path="/**" /> 
        <bean class="com.huilan.controller.MaintenanceInterceptor">
           <property name="maintenanceStartTime" value="23" />
		   <property name="maintenanceEndTime" value="24" />
		   <property name="maintenanceMapping" value="/SpringMVC/maintenance.htm" />
       </bean>
     </mvc:interceptor>  -->
	
	<!-- 定义首页 -->	
	<!--<mvc:view-controller path="/" view-name="redirect:/account/user/"/>-->
	<!-- <mvc:view-controller path="/Manager/message" view-name="Manager/message"/> -->
	<mvc:view-controller path="**/Message" view-name="Manager/Messages"/>
	<mvc:view-controller path="/" view-name="home"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<!-- InternalResourceViewResolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="viewClass">
            <value>org.springframework.web.servlet.view.InternalResourceView</value>
        </property>
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>                
                <value>/WEB-INF/views/**/train-def.xml</value>                
            </list>
        </property>
    </bean>
     <bean class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
    <property name="viewClass"
            value="org.springframework.web.servlet.view.tiles2.TilesView" />  
            <property name="order"><value>1</value></property>
    </bean> 
    
    

    <!--<bean  class="org.springframework.web.servlet.view.UrlBasedViewResolver">
          <property name="viewClass"
            value="org.springframework.web.servlet.view.tiles2.TilesView" />  
            <property name="order"><value>1</value></property>
           </bean>-->
          
          
    <!-- servlet适配器，这里必须明确声明，因为spring默认没有初始化该适配器 -->  
    <bean id="servletHandlerAdapter" class="org.springframework.web.servlet.handler.SimpleServletHandlerAdapter"/> 
    
    <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.MyExceptionHandler"/>-->
    <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
      <property name="defaultErrorView" value="errorpages/failure"/>
    </bean>-->
	
	
	
	<!-- 支持 Shiro对Controller的AOP安全控制 begin-->
	<!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>  
            </props>  
        </property>  
    </bean>  -->
	<!-- end -->
	
</beans>
