<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	

	
	<!-- 接口方法保护  @Secured("IS_AUTHENTICATED_ANONYMOUSLY")  -->
   <!-- <global-method-security secured-annotations="enabled" pre-post-annotations="enabled" jsr250-annotations="enabled" proxy-target-class="true"/> -->
   
   
	<http pattern="/images/**" security="none"/>
    <http pattern="/login" security="none"/>
    <http pattern="/home" security="none"/>
    
<!-- access-decision-manager-ref="myAccessDecisionManagerBean"  use-expressions="true" access="permitAll" access="hasRole('ROLE_USER')"-->
	<http auto-config="true" use-expressions="true"  access-denied-page="/accessDenied">
	    <!-- <intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
		<intercept-url pattern="/welcome*" access="isAuthenticated()" />
		<intercept-url pattern="/Manager/**" access="isAuthenticated()" />
		<form-login login-page="/login" authentication-failure-url="/loginfailed" 
		login-processing-url="/openv-login"	always-use-default-target="true" default-target-url="/welcome"/>
		<!-- <access-denied-handler error-page="/common/403.jsp"/> -->		 
		<logout logout-success-url="/home" delete-cookies="JSESSIONID" logout-url="/logout"/>
				
		<session-management session-fixation-protection="migrateSession" invalid-session-url="/sessionTimeout">
		   <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</session-management>
		 <!-- <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/> -->
	</http>
	


<!-- 配置自己的拦截器  --> 
<!-- <beans:bean id="myFilter" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor"> 
  <beans:property name="authenticationManager" ref="autheticationManager"></beans:property> 
  <beans:property name="accessDecisionManager" > 
    <beans:bean class="org.springframework.security.access.vote.AffirmativeBased"> 
      <beans:property name="decisionVoters"> 
        <beans:list> 
          <beans:bean class="org.springframework.security.access.vote.RoleVoter" /> 
        </beans:list> 
      </beans:property> 
    </beans:bean> 
  </beans:property>  
<beans:property name="securityMetadataSource" ref="myInvocationSecurityMetadataSource" /> 
</beans:bean>  -->
 

	<authentication-manager alias="authenticationManager">
		<!-- <authentication-provider>
		<password-encoder hash="sha" >
		<salt-source user-property="username"/>  
		</password-encoder> 
			<user-service>
				<user name="mkyong" password="7c4a8d09ca3762af61e59520943dc26494f8941b" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider> -->
		<!-- 使用自定义UserDetailsService -->
		<authentication-provider user-service-ref="userServiceproxy">
		  <password-encoder ref="encoder"/>		  
		</authentication-provider>
	</authentication-manager>	
	
	
	<!-- <beans:bean id="myInvocationSecurityMetadataSource" class="com.huilan.service.MyInvocationSecurityMetadataSource" init-method="init"/> -->

	
</beans:beans>
